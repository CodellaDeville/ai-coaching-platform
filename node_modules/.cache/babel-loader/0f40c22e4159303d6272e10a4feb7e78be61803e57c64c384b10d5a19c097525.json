{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{Snackbar,Alert}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotificationContext=/*#__PURE__*/createContext(undefined);export const NotificationProvider=_ref=>{let{children}=_ref;const[notifications,setNotifications]=useState([]);const[currentNotification,setCurrentNotification]=useState(null);const showNotification=(type,message)=>{const newNotification={id:Date.now().toString(),type,message,timestamp:new Date()};setNotifications(prev=>[...prev,newNotification]);setCurrentNotification(newNotification);};const clearNotification=id=>{setNotifications(prev=>prev.filter(notification=>notification.id!==id));if((currentNotification===null||currentNotification===void 0?void 0:currentNotification.id)===id){setCurrentNotification(null);}};const requestPushPermission=async()=>{try{if('Notification'in window){const permission=await Notification.requestPermission();if(permission==='granted'){showNotification('success','Push notifications enabled');}else{showNotification('warning','Push notifications not enabled');}}}catch(error){console.error('Error requesting notification permission:',error);showNotification('error','Failed to enable push notifications');}};const handleClose=id=>{clearNotification(id);};const value={notifications,showNotification,clearNotification,requestPushPermission};return/*#__PURE__*/_jsxs(NotificationContext.Provider,{value:value,children:[children,currentNotification&&/*#__PURE__*/_jsx(Snackbar,{open:true,autoHideDuration:6000,onClose:()=>handleClose(currentNotification.id),anchorOrigin:{vertical:'bottom',horizontal:'right'},children:/*#__PURE__*/_jsx(Alert,{onClose:()=>handleClose(currentNotification.id),severity:currentNotification.type,variant:\"filled\",children:currentNotification.message})})]});};export const useNotifications=()=>{const context=useContext(NotificationContext);if(context===undefined){throw new Error('useNotifications must be used within a NotificationProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","Snackbar","Alert","jsx","_jsx","jsxs","_jsxs","NotificationContext","undefined","NotificationProvider","_ref","children","notifications","setNotifications","currentNotification","setCurrentNotification","showNotification","type","message","newNotification","id","Date","now","toString","timestamp","prev","clearNotification","filter","notification","requestPushPermission","window","permission","Notification","requestPermission","error","console","handleClose","value","Provider","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","variant","useNotifications","context","Error"],"sources":["C:/Users/lasoa/CascadeProjects/ai-coaching-platform/src/contexts/NotificationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { Snackbar, Alert } from '@mui/material';\n\ninterface Notification {\n  id: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  message: string;\n  timestamp: Date;\n}\n\ninterface NotificationContextType {\n  notifications: Notification[];\n  showNotification: (type: Notification['type'], message: string) => void;\n  clearNotification: (id: string) => void;\n  requestPushPermission: () => Promise<void>;\n}\n\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\n\nexport const NotificationProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [currentNotification, setCurrentNotification] = useState<Notification | null>(null);\n\n  const showNotification = (type: Notification['type'], message: string) => {\n    const newNotification: Notification = {\n      id: Date.now().toString(),\n      type,\n      message,\n      timestamp: new Date(),\n    };\n\n    setNotifications((prev) => [...prev, newNotification]);\n    setCurrentNotification(newNotification);\n  };\n\n  const clearNotification = (id: string) => {\n    setNotifications((prev) => prev.filter((notification) => notification.id !== id));\n    if (currentNotification?.id === id) {\n      setCurrentNotification(null);\n    }\n  };\n\n  const requestPushPermission = async () => {\n    try {\n      if ('Notification' in window) {\n        const permission = await Notification.requestPermission();\n        if (permission === 'granted') {\n          showNotification('success', 'Push notifications enabled');\n        } else {\n          showNotification('warning', 'Push notifications not enabled');\n        }\n      }\n    } catch (error) {\n      console.error('Error requesting notification permission:', error);\n      showNotification('error', 'Failed to enable push notifications');\n    }\n  };\n\n  const handleClose = (id: string) => {\n    clearNotification(id);\n  };\n\n  const value = {\n    notifications,\n    showNotification,\n    clearNotification,\n    requestPushPermission,\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n      {currentNotification && (\n        <Snackbar\n          open={true}\n          autoHideDuration={6000}\n          onClose={() => handleClose(currentNotification.id)}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        >\n          <Alert\n            onClose={() => handleClose(currentNotification.id)}\n            severity={currentNotification.type}\n            variant=\"filled\"\n          >\n            {currentNotification.message}\n          </Alert>\n        </Snackbar>\n      )}\n    </NotificationContext.Provider>\n  );\n};\n\nexport const useNotifications = () => {\n  const context = useContext(NotificationContext);\n  if (context === undefined) {\n    throw new Error('useNotifications must be used within a NotificationProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}