{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Here we would typically initialize our authentication service\n// For now, we'll simulate authentication with localStorage\nconst savedUser=localStorage.getItem('user');if(savedUser){setUser(JSON.parse(savedUser));}setLoading(false);},[]);const signIn=async(email,password)=>{try{// Simulate API call\nconst mockUser={id:'1',email,name:'Test User',preferences:{coachingStyle:'directive',notifications:true,anonymousMode:false}};setUser(mockUser);localStorage.setItem('user',JSON.stringify(mockUser));}catch(error){console.error('Sign in error:',error);throw error;}};const signOut=async()=>{try{setUser(null);localStorage.removeItem('user');}catch(error){console.error('Sign out error:',error);throw error;}};const updateUserPreferences=async preferences=>{if(!user)return;try{const updatedUser={...user,preferences:{...user.preferences,...preferences}};setUser(updatedUser);localStorage.setItem('user',JSON.stringify(updatedUser));}catch(error){console.error('Update preferences error:',error);throw error;}};const value={user,loading,signIn,signOut,updateUserPreferences};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","signIn","email","password","mockUser","id","name","preferences","coachingStyle","notifications","anonymousMode","setItem","stringify","error","console","signOut","removeItem","updateUserPreferences","updatedUser","value","Provider","useAuth","context","Error"],"sources":["C:/Users/lasoa/CascadeProjects/ai-coaching-platform/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  preferences?: {\n    coachingStyle?: string;\n    notifications?: boolean;\n    anonymousMode?: boolean;\n  };\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<void>;\n  signOut: () => Promise<void>;\n  updateUserPreferences: (preferences: Partial<User['preferences']>) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Here we would typically initialize our authentication service\n    // For now, we'll simulate authentication with localStorage\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const signIn = async (email: string, password: string) => {\n    try {\n      // Simulate API call\n      const mockUser: User = {\n        id: '1',\n        email,\n        name: 'Test User',\n        preferences: {\n          coachingStyle: 'directive',\n          notifications: true,\n          anonymousMode: false,\n        },\n      };\n      setUser(mockUser);\n      localStorage.setItem('user', JSON.stringify(mockUser));\n    } catch (error) {\n      console.error('Sign in error:', error);\n      throw error;\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      setUser(null);\n      localStorage.removeItem('user');\n    } catch (error) {\n      console.error('Sign out error:', error);\n      throw error;\n    }\n  };\n\n  const updateUserPreferences = async (preferences: Partial<User['preferences']>) => {\n    if (!user) return;\n\n    try {\n      const updatedUser = {\n        ...user,\n        preferences: {\n          ...user.preferences,\n          ...preferences,\n        },\n      };\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    } catch (error) {\n      console.error('Update preferences error:', error);\n      throw error;\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    signIn,\n    signOut,\n    updateUserPreferences,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAqB9E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAA8BO,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,YAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChF,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AACA;AACA,KAAM,CAAAY,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC9C,GAAIF,SAAS,CAAE,CACbH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC,CAChC,CACAD,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,MAAM,CAAG,KAAAA,CAAOC,KAAa,CAAEC,QAAgB,GAAK,CACxD,GAAI,CACF;AACA,KAAM,CAAAC,QAAc,CAAG,CACrBC,EAAE,CAAE,GAAG,CACPH,KAAK,CACLI,IAAI,CAAE,WAAW,CACjBC,WAAW,CAAE,CACXC,aAAa,CAAE,WAAW,CAC1BC,aAAa,CAAE,IAAI,CACnBC,aAAa,CAAE,KACjB,CACF,CAAC,CACDjB,OAAO,CAACW,QAAQ,CAAC,CACjBP,YAAY,CAACc,OAAO,CAAC,MAAM,CAAEZ,IAAI,CAACa,SAAS,CAACR,QAAQ,CAAC,CAAC,CACxD,CAAE,MAAOS,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAE,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACFtB,OAAO,CAAC,IAAI,CAAC,CACbI,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC,CACjC,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAI,qBAAqB,CAAG,KAAO,CAAAV,WAAyC,EAAK,CACjF,GAAI,CAACf,IAAI,CAAE,OAEX,GAAI,CACF,KAAM,CAAA0B,WAAW,CAAG,CAClB,GAAG1B,IAAI,CACPe,WAAW,CAAE,CACX,GAAGf,IAAI,CAACe,WAAW,CACnB,GAAGA,WACL,CACF,CAAC,CACDd,OAAO,CAACyB,WAAW,CAAC,CACpBrB,YAAY,CAACc,OAAO,CAAC,MAAM,CAAEZ,IAAI,CAACa,SAAS,CAACM,WAAW,CAAC,CAAC,CAC3D,CAAE,MAAOL,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAM,KAAK,CAAG,CACZ3B,IAAI,CACJE,OAAO,CACPO,MAAM,CACNc,OAAO,CACPE,qBACF,CAAC,CAED,mBACE/B,IAAA,CAACC,WAAW,CAACiC,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAA5B,QAAA,CAChC,CAACG,OAAO,EAAIH,QAAQ,CACD,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAA8B,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGxC,UAAU,CAACK,WAAW,CAAC,CACvC,GAAImC,OAAO,GAAKlC,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAmC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}